name: CI/CD Pipeline

on:
  push:
    branches:
      - '*'

jobs:
  prepare:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get app name
        run: |
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          REPO_NAME=${{ github.event.repository.name }}
          
          # Check if the branch name is "main"
          if [ $BRANCH_NAME = "main" ]; then
            APP_NAME=$REPO_NAME
          else
            APP_NAME=$BRANCH_NAME
          fi
          
          echo "APP_NAME=$APP_NAME" >> vars.env
          echo $APP_NAME

      - name: Generate random number
        run: |
          PORT=$((RANDOM % (65000 - 5000 + 1) + 5000))
          
          echo "PORT=$PORT" >> vars.env
          echo "PROJECT_NAME=${{ github.event.repository.name }}" >> vars.env

  clean:
    runs-on: self-hosted
    needs: prepare
    steps:
      - name: Remove container and image
        run: |
          source vars.env
          export PORT=$PORT
          if docker inspect $APP_NAME > /dev/null 2>&1; then docker rm -f $APP_NAME && docker rmi -f $APP_NAME; else echo "Container not found."; fi

  build:
    runs-on: self-hosted
    needs: clean
    steps:
      - name: Build docker image
        run: |
          source vars.env
          docker build --tag $APP_NAME . 

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Run docker container
        run: |
          source vars.env
          
          docker run --name $APP_NAME -d \
            --network fidesyx \
            -e PORT=$PORT -p $PORT:$PORT \
             $APP_NAME
          
          # Update DNS settings
          curl --request POST \
               --url https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/dns_records \
               --header "Content-Type: application/json" \
               --header "X-Auth-Email: ${{ secrets.CF_X_AUTH_EMAIL }}" \
               --header "X-Auth-Key: ${{ secrets.CF_X_AUTH_KEY }}" \
                --data "{\"content\": \"${{ vars.SERVER_HOST }}\",\"name\":\"${APP_NAME}\",\"proxied\": false,\"type\": \"A\",\"comment\": \"Domain verification record\",\"tags\": [],\"ttl\": 3600}"
          
          # Update NGINX config
          export PORT=$PORT
          export SERVER_HOST=${{ vars.SERVER_HOST }}
          export APP_NAME=$APP_NAME
          bash ./update_nginx.sh

          echo ""
          echo "http://"$APP_NAME".fidesy.xyz/"